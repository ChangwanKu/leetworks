library(formattable)
formattable(stan1)
library(grid)
library(dplyr)
library(tidyr)
library(gridExtra)
standard <- read.csv('./rawdatas/entrance_standard.csv')
stan1 <- standard %>% filter(schoolindex == 1 & year == 2018) %>% select(level,leet,gpa,lang,doc,essay,interview,sum) %>% replace(.,is.na(.),0)
grid.table(stan1, rows = NULL,)
grid.table(stan1, rows = NULL)
grid.table(stan1, rows = NULL, theme = ttheme("classic"))
grid.table(stan1, rows = NULL, theme = ttheme("classic"))
library(gtable)
g<-tableGrob(stan1, rows = NULL, theme = ttheme("classic"))
gtable_add_grob(g, grobs = rectGrob())
gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = nrow(g), l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = nrow(g), l = 1, r = ncol(g))
grid.draw(g)
grid.draw(g)
grid.draw(g)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = nrow(g), l = 1, r = ncol(g))
grid.draw(g)
nrow(g)
ncol(g)
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = nrow(g), l = 1, r = 7)
grid.draw(g)
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 1)),
t = 2, b = nrow(g), l = 1, r = 7)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g
grid.draw(g)
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 1)),
t = 2, b = nrow(g), l = 1, r = 7)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = nrow(g), l = 1, r = 7)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 1, b = nrow(g), l = 1, r = 7)
grid.draw(g)
nrow(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = nrow(g), l = 2, r = 8)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2, b = 2, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 1)),
t = 2, b = 2, l = 1, r = ncol(g))
grid.draw(g)
g<-grid.draw(g)
g
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 1)),
t = 2, b = 2, l = 1, r = ncol(g))
grid.draw(g)
stan1 <- standard %>% filter(schoolindex == 1 & year == 2018) %>% select(level,leet,gpa,lang,doc,essay,interview,sum) %>% replace(.,is.na(.),0)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = rectGrob(gp = gpar(fill = NA, lwd = 1)),
t = 2, b = 2)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 3, b = 3, l = 3, r = 3)
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = nrow(g), l = 2, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = nrow(g), l = 1, r = ncol(g))
grid.draw(g)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 2, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 2, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 0, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 3, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 3, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 0, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 2, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 2, l = 1, r = ncol(g))
grid.draw(g)
stan1 <- standard %>% filter(schoolindex == 1 & year == 2018) %>% select(level,leet,gpa,lang,doc,essay,interview,sum) %>% replace(.,is.na(.),0)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 2, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(3,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 1, l = 1, r = ncol(g))
grid.draw(g)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "red")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 2, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "Grey")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0)),
t = 1, b = 2, l = 1, r = ncol(g))
grid.draw(g)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
grid.draw(g)
invisible(g)
grid.draw(g)
invisible(g)
a<-invisible(g)
a
grid.draw(g)
gg <- invisible(g)
standard <- read.csv('./rawdatas/entrance_standard.csv')
stan1 <- standard %>% filter(schoolindex == 1 & year == 2018) %>% select(level,leet,gpa,lang,doc,essay,interview,sum) %>% replace(.,is.na(.),0)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
gg <- invisible(g)
View(gg)
standard <- read.csv('./rawdatas/entrance_standard.csv')
stan1 <- standard %>% filter(schoolindex == 1 & year == 2018) %>% select(level,leet,gpa,lang,doc,essay,interview,sum) %>% replace(.,is.na(.),0)
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
entrance <- read.csv('./rawdatas/모집인원(16,17,18,19).csv')
ent1 <- entrance %>% filter(schoolindex == 1 & year == 2018) %>% select(3:7) %>% rename()%>% gather()
ent2 <- ent1 %>% filter(value != 0) %>% arrange(desc(value)) %>% mutate(text_y = cumsum(value) - value/2)
ent2$key <- factor(ent2$key,levels = rev(as.character(ent2$key)))
p <- ggplot(ent2,aes(x='',y=value,fill=key)) + geom_bar(width = 1,stat = 'identity', color = 'white')
p <- p + coord_polar(theta = 'y', start = 0 )
p <- p + theme_minimal() + theme(axis.title = element_blank(), axis.text = element_blank(), panel.grid = element_blank(), legend.position = 'bottom', legend.title = element_blank()) + guides(fill = guide_legend(reverse = TRUE))
p <- ggplot(ent2,aes(x='',y=value,fill=key)) + geom_bar(width = 1,stat = 'identity', color = 'white')
p <- p + coord_polar(theta = 'y', start = 0 )
p <- p + theme_minimal() + theme(axis.title = element_blank(), axis.text = element_blank(), panel.grid = element_blank(), legend.position = 'bottom', legend.title = element_blank()) + guides(fill = guide_legend(reverse = TRUE))
p <- p + geom_text(aes(label = value, y = text_y), nudge_x = .7) + scale_fill_manual(values = c("#FF7FFF", "#FF4CFF", "#FF33FF", "#FF00FF"))
# table plot
p
ggarrange(p,g,ncol = 2, nrow = 1)
ggarrange(p,g, nrow = 1)
ggarrange(p,g, ncol = 2,nrow = 1)
ggarrange(p,g, ncol = 2)
ggarrange(p,g, ncol = 2, widths = c(1,1.5))
entrance <- read.csv('./rawdatas/모집인원(16,17,18,19).csv')
ent1 <- entrance %>% filter(schoolindex == 1 & year == 2018) %>% select(3:7) %>% rename()%>% gather()
ent2 <- ent1 %>% filter(value != 0) %>% arrange(desc(value)) %>% mutate(text_y = cumsum(value) - value/2)
ent2$key <- factor(ent2$key,levels = rev(as.character(ent2$key)))
p <- ggplot(ent2,aes(x='',y=value,fill=key)) + geom_bar(width = 1,stat = 'identity', color = 'white')
p <- p + coord_polar(theta = 'y', start = 0 )
p <- p + theme_minimal() + theme(axis.title = element_blank(), axis.text = element_blank(), panel.grid = element_blank(), legend.position = 'bottom', legend.title = element_blank()) + guides(fill = guide_legend(reverse = TRUE))
p <- p + geom_text(aes(label = value, y = text_y), nudge_x = .7) + scale_fill_manual(values = c("#FF7FFF", "#FF4CFF", "#FF33FF", "#FF00FF"))
# table plot
p
standard <- read.csv('./rawdatas/entrance_standard.csv')
stan1 <- standard %>% filter(schoolindex == 1 & year == 2018) %>% select(level,leet,gpa,lang,doc,essay,interview,sum) %>% replace(.,is.na(.),0)
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal())
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2, widths = c(1,1.5))
ggarrange(p,g, ncol = 2)
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal(padding = unit(20,30,'mm')))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal(padding = units(20,30,'mm')))
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal(padding = unit(c(20,30), 'mm')))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal(padding = unit(c(20,40), 'mm')))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal(padding = unit(c(20,40), 'mm')))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(1,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(1,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(1,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 3, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
# pie 랑 table 합체
g<-tableGrob(stan1, rows = NULL, theme = ttheme_minimal(padding = unit(c(20,40), 'mm')))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(1,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 2, b = 3, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 1, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 1, b = 2, l = 1, r = ncol(g))
g<-gtable_add_grob(g, grobs = segmentsGrob(x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(1,"npc"),
y1 = unit(0,"npc"),
gp = gpar(lwd = 2.0, col = "#FF7FFF")),
t = 2, b = 3, l = 1, r = ncol(g))
ggarrange(p,g, ncol = 2)
library(grid)
library(gridExtra)
library(gtable)
.libPaths('e:/data/lib')
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
age <- read.csv('./rawdatas/age.csv')
age1 <- age %>% filter(schoolindex == 1) %>% select(ends_with('14'),ends_with('15'),ends_with('16'),ends_with('17')) %>% gather()
age2 <- age1 %>% mutate(group = substr(key,1,1),year = substr(key,2,3))
p <- age2 %>% ggplot(aes(x=year,y=value,fill=group)) + geom_bar(stat = 'identity', width = 0.5)
p <- p + scale_x_discrete(labels=seq(2014,2017,1))
p <- p + theme_minimal() + theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_line(color='gray'), axis.ticks = element_blank())
p <- p + scale_fill_manual(values = c('#FF00FF','#FF99ff','#ffccff'), labels = c('29세 이상','26~28세','25세 이하')) + labs(caption = '단위 : %')
p
p <- p + theme_minimal() + theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_blank(), axis.ticks = element_blank())
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
age <- read.csv('./rawdatas/age.csv')
age1 <- age %>% filter(schoolindex == 1) %>% select(ends_with('14'),ends_with('15'),ends_with('16'),ends_with('17')) %>% gather()
age2 <- age1 %>% mutate(group = substr(key,1,1),year = substr(key,2,3))
p <- age2 %>% ggplot(aes(x=year,y=value,fill=group)) + geom_bar(stat = 'identity', width = 0.5)
p <- p + scale_x_discrete(labels=seq(2014,2017,1))
p <- p + theme_minimal() + theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_blank(), axis.ticks = element_blank())
p <- p + scale_fill_manual(values = c('#FF00FF','#FF99ff','#ffccff'), labels = c('29세 이상','26~28세','25세 이하')) + labs(caption = '단위 : %')
p
csv <- read.csv('./rawdatas/foreign.csv')
foreign <- csv %>% rename(schoolindex = 癤퓋choolindex) %>% filter(schoolindex == 1) %>% select(f14, f15, f16, f17)
foreign <- gather(foreign)
foreign
p <- ggplot(foreign,aes(key,value)) + geom_bar(stat='identity',width = 0.5, fill='#FF00FF')
p <- p + geom_text(aes(key,value,label = paste0(value)),vjust=-0.5) + scale_x_discrete(labels=seq(2014,2017,1))
p + theme_minimal() + theme(axis.ticks = element_blank(),axis.title = element_blank(), axis.text.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_line(color='gray'))
p + theme_minimal() + theme(axis.ticks = element_blank(),axis.title = element_blank(), axis.text.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_blank())
a <- read.csv('./rawdatas/myschool.csv')
head(a)
a1 <- a %>% filter(癤퓋choolindex == 1) %>% select(m14, o14, m15, o15, m16, o16, m17, o17)
a1
a2 <- gather(a1)
a2
a3 <- a2 %>% mutate(group=substr(key,1,1),year=substr(key,2,3))
a3
p <- ggplot(a3,aes(x=year, y=value, fill = group)) + geom_bar(stat='identity', position = 'dodge', width = 0.5)
p <- p + geom_text(aes(x=year, y=value, label = paste0(value)),vjust=-0.5, position = position_dodge(0.5)) + scale_x_discrete(labels=seq(2014,2017,1))
p <- p + theme_minimal() + theme(axis.ticks = element_blank(),axis.title = element_blank(), axis.text.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_blank())
p + theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank()) + scale_fill_manual(values = c('#FF00FF','#FFCCFF'), labels = c('자','타'))
a <- read.csv('./rawdatas/sex.csv')
head(a)
a1 <- a %>% rename(schoolindex = 癤퓋choolindex) %>% filter(schoolindex == 1) %>% select(m14, w14, m15, w15, m16, w16, m17, w17)
a1
a2 <- gather(a1)
a2
a3 <- a2 %>% mutate(group=substr(key,1,1),year=substr(key,2,3))
a3
p <- ggplot(a3,aes(x=year, y=value, fill = group)) + geom_bar(stat='identity', position = 'dodge', width = 0.5)
p <- p + geom_text(aes(x=year, y=value, label = value),vjust=-0.5, position = position_dodge(0.5)) +
theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank()) +
scale_fill_manual(values = c('#FF00FF','#FFCCFF'), labels = c('남','여')) +
scale_x_discrete(labels=seq(2014,2017,1))
p + theme_minimal() + theme(axis.title.x = element_blank(), axis.title.y = element_blank(), panel.grid.major.x = element_blank(), panel.grid.major.y = element_line(color = 'gray'), panel.grid.minor.y = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())
